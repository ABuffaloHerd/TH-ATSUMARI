#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["3D Background test"]
#Text["base file for nonspells"] 
#Background["/script/actual/bg/bgNormal.dnh"]

#include "./shot/ZUNShot_Const.txt" //Some bullet graphics
#include "./lib.dnh"
#include "./BFX/BFX.dnh"

//Declare some global variables
let objBoss;
let count = 0;
let bgm = GetCurrentScriptDirectory() ~ "bgm/scatmanworld.mp3";

let objScene = GetEnemyBossSceneObjectID();

//Init bfx library
BFX_Init();

@Event
{
  alternative(GetEventType())
  case(EV_REQUEST_LIFE)
  {
    SetScriptResult(2000);
  }
  case(EV_REQUEST_TIMER)
  {
    SetScriptResult(99);
  }
  case(EV_REQUEST_SPELL_SCORE)
  {
    SetScriptResult(1000000);
  }
}


@Initialize 
{
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objBoss);

  //Move the boss to center of the screen: 0, 60 in 60 frames (1 second)
  ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
  // ObjEnemyBossScene_StartSpell(objScene);
  

  LoadSound(bgm);

  drawMagicCircle(objBoss);
  DrawLoop;
  TFinalize;
}

@MainLoop 
{
  //Boss hitbox move to boss center
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);

  //Player hitbox 
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
  // PlayBGM(bgm, 0, 223);
  count++;
  yield;
}

task DrawLoop
{
  let image = GetCurrentScriptDirectory() ~ "./sprite/th16.png"; // Set okina
  ObjPrim_SetTexture(objBoss, image); // Set objBoss texture to image
  ObjSprite2D_SetSourceRect(objBoss, 10, 2304, 103, 2407); // Spritesheet coords for one texture
  ObjSprite2D_SetDestCenter(objBoss); // Set the center of the sprite
}

task TFinalize
{
  //Don't do anything until the boss life = 0
  while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0)
  {
    yield;
  }

  Obj_Delete(objBoss); //Delete boss
  DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE); // Immediately delete all shots
  SetAutoDeleteObject(true); // Auto delete objects
  CloseScript(GetOwnScriptID()); // Close the script
  return; //Fuck off
}

task spray
{
  // Get random angle
  let angleT = rand(0, 180);
  
  // Create counter
  let counter = 0;
  
  //Bullets spawn in line from angle
  let originX = ObjMove_GetX(objBoss);
  let originY = ObjMove_GetY(objBoss);
  
  CreateLooseLaserA1(originX, originY, 6, angleT, 200, 10, C_LASER_AQUA, 1);
  
}