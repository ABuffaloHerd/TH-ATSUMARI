function wait(n)
{
  // Does what it's called
  loop(n)
  {
    yield;
  }
}

function GetCenterX()
{
  return GetStgFrameWidth() / 2; // Returns half the width of arena
}

function GetCenterY()
{
  return GetStgFrameHeight() / 2; // Returns half the height of the arena
}

function randInt(x, y)
{
  return round(rand(x, y));
}

//Prints and moves spell card title.
task spellCardTitle(name)
{
  //Create object
  let title = ObjText_Create();

  ObjText_SetText(title, name);
  ObjText_SetFontType(title, "Arial");
  ObjText_SetHorizontalAlignment(title, ALIGNMENT_LEFT);
  ObjText_SetMaxWidth(title, 300);
  ObjText_SetFontSize(title, 12);
  Obj_SetRenderPriority(title, 0.24);

  //Add a black ass border around it
  ObjText_SetFontBorderType(title, BORDER_FULL);
  ObjText_SetFontBorderColor(title, 0, 0, 0);
  ObjText_SetFontBorderWidth(title, 2);

  //Create a red underline
  let texPath = GetCurrentScriptDirectory() ~ "./sprite/underline.png";
  let line = ObjPrim_Create(OBJ_SPRITE_2D);
  ObjRender_SetBlendType(line, BLEND_ALPHA);
  Obj_SetRenderPriority(line, 0.23);
  ObjPrim_SetTexture(line, texPath);
  Obj_SetVisible(line, true);

  ObjSprite2D_SetSourceRect(line, 0, 0, 242, 11);
  ObjSprite2D_SetDestRect(line, 0, 0, -242, 11);

  //Sets position to bottom of playfield, but in position to move straight up
  ObjRender_SetPosition(title, 384 - ObjText_GetTotalWidth(title), 448 - ObjText_GetTotalHeight(title), 0);
  ObjRender_SetPosition(line, 384, 40, 0);

  //Get deltas
  // let dX = ObjText_GetTotalWidth(text);
  let upperBound = 40;
  let alpha = 0;
  let dY = 448 - upperBound;
  let currentY = ObjRender_GetY(title);

  while(currentY > upperBound)
  {
    currentY -= 8;
    alpha += 5;
    ObjRender_SetPosition(title, ObjRender_GetX(title), currentY, 1);
    ObjRender_SetAlpha(line, alpha);
    yield;
  }
}

//Handles magic circle
task drawMagicCircle(objBoss)
{
  //Magic Circle
  let circleSprite = GetCurrentScriptDirectory() ~ "./sprite/magicCircle.png"; //set texture
  let magicCircle = ObjPrim_Create(OBJ_SPRITE_2D); //Create texture

  ObjPrim_SetTexture(magicCircle, circleSprite);
  ObjSprite2D_SetSourceRect(magicCircle, 0, 0, 1024, 1024);
  ObjRender_SetScaleXYZ(magicCircle, 0.25, 0.25, 1);
  ObjSprite2D_SetDestCenter(magicCircle);
  ObjRender_SetBlendType(magicCircle, BLEND_ALPHA);
  ObjRender_SetAlpha(magicCircle, 180);

  //Section makes circle follow boss object
  let counter = 0;

  loop
  {
    ObjRender_SetPosition(magicCircle, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 0);
    ObjRender_SetAngleXYZ(magicCircle, 25 * sin(counter), 30 * cos(counter), 4 * counter);
    counter++;
    yield;
  }
}

//Moves object to random position. Upper and lower X and Y accepted.
task randMoveObj(object, lowerX, upperX, lowerY, upperY, vel)
{
  ObjMove_SetDestAtSpeed(object, rand(lowerX, upperX), rand(lowerY, upperY), vel);
}
