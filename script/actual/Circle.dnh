#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Circle Shot"]
#Text["base file for nonspells"] 

#include "./shot/ZUNShot_Const.txt" //Some bullet graphics
#include "./lib.dnh"

//Declare some global variables
let objBoss;
let objScene = GetEnemyBossSceneObjectID();
let count = 0;
let first = false;

//Call loadsound from library
let shot1 = GetCurrentScriptDirectory() ~ "./se/se_tan00.wav";
let shot2 = GetCurrentScriptDirectory() ~ "./se/se_tan01.wav";
let shot3 = GetCurrentScriptDirectory() ~ "./se/se_tan02.wav";
let kira = GetCurrentScriptDirectory() ~ "./se/se_kira00.wav";

let sound1 = CreateSoundObject(shot1, 30);
let sound2 = CreateSoundObject(shot2, 30);
let sound3 = CreateSoundObject(shot3, 30);
let sound4 = CreateSoundObject(kira, 30);

@Event
{
  alternative(GetEventType())
  case(EV_REQUEST_LIFE)
  {
    SetScriptResult(10000);
  }
  case(EV_REQUEST_TIMER)
  {
    SetScriptResult(99);
  }
  case(EV_REQUEST_SPELL_SCORE)
  {
    SetScriptResult(1000000);
  }
}


@Initialize 
{
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objBoss);

  ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 90, 60);
  ObjEnemyBossScene_StartSpell(objScene);

  spellCardTitle("Circle Sign &quot;Eye of Cthulhu&quot; ");
  // spellCardTitle("Arguably the most painful spell i came up with ");

  drawMagicCircle(objBoss);

  DrawLoop;
  TFinalize;
}

@MainLoop 
{
  //Boss hitbox move to boss center
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);

  //Player hitbox 
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
  if(count > 60 && not(first))
  {
    count = 230;
    first = true;
  }
  

  if(count % 240 == 0 && count > 60)
  {
    circleShot;
  }

  count++;
  yield;
}

task circleShot
{
  let angle = rand(0, 360);
  loop(30)
  {
    let angle2 = angle;

    PlaySoundObject(sound2);
    loop(8)
    {
      let obj = CreateShotA2(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 5, angle2, -0.1, 0, BL_SMALL_PURPLE, 2);
      bulletChange(obj);
      angle2 += 360/8;
    }
    wait(1);
    angle += 360 / 30;
  }

  wait(70);
  extraSpam;
}

task extraSpam
{
  let angle = GetAngleToPlayer(objBoss);

  if(Obj_IsDeleted(objBoss))
  {
    return;
  }

  PlaySoundObject(sound1);
  loop(40)
  {
    ascent (i in 1..5)
    {
      let obj = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 1 * i, angle, SMALL_PURPLE, 1);
      if(i % 2 == 0)
      {
        ObjMove_SetAngularVelocity(obj, 0.5);
      }
      else
      {
        ObjMove_SetAngularVelocity(obj, -0.5);
      }
    }

    angle += 360/40;
  }
}

task bulletChange(object)
{
  while(ObjMove_GetSpeed(object) > 0)
  {
    yield;
  }

  ObjMove_SetAcceleration(object, 0);
  if(Obj_IsDeleted(object))
  {
    return;
  }
  PlaySoundObject(sound4);
  CreateShotA1(ObjMove_GetX(object), ObjMove_GetY(object), 2, ObjMove_GetAngle(object), SUPP_BLUE, 1);
  CreateShotA1(ObjMove_GetX(object), ObjMove_GetY(object), 1, ObjMove_GetAngle(object) * -1, SUPP_PURPLE, 1);
  Obj_Delete(object);
}

task DrawLoop
{
  let image = GetCurrentScriptDirectory() ~ "./sprite/th16.png"; // Set okina
  ObjPrim_SetTexture(objBoss, image); // Set objBoss texture to imgRumia
  ObjSprite2D_SetSourceRect(objBoss, 10, 2304, 103, 2407); // Spritesheet coords for one texture
  ObjSprite2D_SetDestCenter(objBoss); // Set the center of the sprite
}

task TFinalize
{
  //Don't do anything until the boss life = 0
  while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0)
  {
    yield;
  }

  Obj_Delete(objBoss); //Delete boss
  DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE); // Immediately delete all shots
  SetAutoDeleteObject(true); // Auto delete objects
  CloseScript(GetOwnScriptID()); // Close the script
  return; //Fuck off
}
