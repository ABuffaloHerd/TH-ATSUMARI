#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Curvy laser"]
#Text["Curvy lasers are fun and good to look at."] 

#include "./shot/ZUNShot_Const.txt" //Some bullet graphics
#include "./lib.dnh"

//Declare some global variables
let objBoss;
let count = 0;

@Event
{
  alternative(GetEventType())
  case(EV_REQUEST_LIFE)
  {
    SetScriptResult(6000);
  }
  case(EV_REQUEST_TIMER)
  {
    SetScriptResult(99);
  }
  case(EV_REQUEST_SPELL_SCORE)
  {
    SetScriptResult(1000000);
  }
}


@Initialize 
{
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objBoss);

  //Move the boss to center of the screen: 0, 60 in 60 frames (1 second)
  ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);

  DrawLoop;
  TFinalize;
}

@MainLoop 
{
  //Boss hitbox move to boss center
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);

  //Player hitbox 
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);

  if (count % 80 == 0 && count > 60)
  {
    lasercurve;
    lasercurveNiggative;
  }

  if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) < 4500 && count % 100 == 0)
  {
    morePain;
  }

  count++;
  yield;
}

task lasercurve
{
  let angleInit = rand(0, 360);
  loop(30)
  {
    //Create laser
    let laser = CreateCurveLaserA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 5, angleInit, 40, 18, C_LASER_PURPLE, 1);
    ObjCrLaser_SetTipDecrement(laser, 0); //make the tip of the laser visible

    laserMovements(laser);
    
    angleInit += 360/30
  }
}

task laserMovements (laser)
{
//laser movement
  ascent (i in 1..10)
  {
    ObjMove_SetAngularVelocity(laser, i);
    wait(10);
    ObjMove_SetAngularVelocity(laser, 0);
  }

}

task lasercurveNiggative
{
  let angleInit = rand(0, 360);
  loop(30)
  {
    //Create laser
    let laser = CreateCurveLaserA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 5, angleInit, 40, 18, C_LASER_PURPLE, 1);
    ObjCrLaser_SetTipDecrement(laser, 0); //make the tip of the laser visible

    laserMovementsNiggative(laser);
    
    angleInit -= 360/30
  }
}

task laserMovementsNiggative (laser)
{
//laser movement
  ascent (i in 1..10)
  {
    ObjMove_SetAngularVelocity(laser, i * -1);
    wait(10);
    ObjMove_SetAngularVelocity(laser, 0);
  }

}

task morePain
{
  let amulet = CreateShotA2(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 6, 90, -0.2, 0, A_AMULET_MAGENTA, 5);
  while(ObjMove_GetSpeed(amulet) > 0)
  {
    yield;
  }

  //Actual shooting of new amulets
  let angle = GetAngleToPlayer(objBoss) - 90;
  let randOffset = rand(-40, 40);
  loop(30)
  {
    let newAmulet = CreateShotA1(ObjMove_GetX(amulet), ObjMove_GetY(amulet), 5, angle, A_AMULET_BLUE, 2);
    newAmuletMove(newAmulet, randOffset);
    angle += 180/30
  }
  Obj_Delete(amulet);
}

task newAmuletMove(bullet, offset)
{
  ObjMove_SetAcceleration(bullet, -0.1);
  while(ObjMove_GetSpeed(bullet) > 0)
  {
    yield;
  }
  
  ObjMove_SetAcceleration(bullet, 0);
  ObjMove_SetSpeed(bullet, 3);
  ObjMove_SetAngle(bullet, ObjMove_GetAngle(bullet) + offset)
}

task DrawLoop
{
  let image = GetCurrentScriptDirectory() ~ "./sprite/th16.png"; // Set okina
  ObjPrim_SetTexture(objBoss, image); // Set objBoss texture to imgRumia
  ObjSprite2D_SetSourceRect(objBoss, 10, 2304, 103, 2407); // Spritesheet coords for one texture
  ObjSprite2D_SetDestCenter(objBoss); // Set the center of the sprite
}

task TFinalize
{
  //Don't do anything until the boss life = 0
  while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0)
  {
    yield;
  }

  Obj_Delete(objBoss); //Delete boss
  DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE); // Immediately delete all shots
  SetAutoDeleteObject(true); // Auto delete objects
  CloseScript(GetOwnScriptID()); // Close the script
  return; //Fuck off
}
